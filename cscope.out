cscope 15 /home/iain/Projects/python/python_crash_course/II_projects/01_alien_invasion/12_alien_invasion -c 0000029186
	@./alien.py

1 import 
	~pygame

2 from 
	~pygame.sprite
 import 
Sprite

5 class 
	cAlien
 ( 
Sprite
 ) :

8 def 
	$__init__
 ( 
self
 , 
settings
 , 
screen
 ) :

9 
	`super
 ( 
Alien
 , 
self
 ) . 
	`__init__
 ( )

10 
self
 . 
	=screen
 = 
screen

11 
self
 . 
	=settings
 = 
settings

14 
self
 . 
	=image
 = 
pygame
 . 
image
 . 
	`load
 ( 'images/alien.bmp' )

15 
self
 . 
	=rect
 = 
self
 . 
image
 . 
	`get_rect
 ( )

18 
self
 . 
rect
 . 
	=x
 = 
self
 . 
rect
 . 
width

19 
self
 . 
rect
 . 
	=y
 = 
self
 . 
rect
 . 
height

22 
self
 . 
	=x
 = 
	`float
 ( 
self
 . 
rect
 . 
x
 )

25 
self
 . 
	=row
 = 0

26 
self
 . 
	=front_line
 = False 
	}

28 def 
	$check_edges
 ( 
self
 ) :

30 
	=screen_rect
 = 
self
 . 
screen
 . 
	`get_rect
 ( )

31 if 
self
 . 
rect
 . 
right
 >= 
screen_rect
 . 
right
 :

33 elif 
self
 . 
rect
 . 
left
 <= 0 :

34 return True 
	}

36 def 
	$update
 ( 
self
 ) :

38 
self
 . 
	=x
 += ( 
self
 . 
settings
 . 
alien_speed_factor
 *

39 
self
 . 
settings
 . 
fleet_direction
 )

40 
self
 . 
rect
 . 
	=x
 = 
self
 . 
x
 
	}


	@./block.py

1 import 
	~pygame

2 from 
	~pygame.sprite
 import 
Sprite

4 class 
	cBlock
 ( 
Sprite
 ) :

6 def 
	$__init__
 ( 
self
 , 
settings
 , 
screen
 , 
x
 , 
y
 ) :

7 
	`super
 ( 
Block
 , 
self
 ) . 
	`__init__
 ( )

8 
self
 . 
	=screen
 = 
screen

9 
self
 . 
	=settings
 = 
settings

12 
self
 . 
	=rect
 = 
pygame
 . 
	`Rect
 ( 0 , 0 , 
settings
 . 
block_width
 ,

13 
settings
 . 
block_height
 )

14 
self
 . 
rect
 . 
	=x
 = 
x

15 
self
 . 
rect
 . 
	=y
 = 
y

16 
self
 . 
	=colour
 = 
settings
 . 
blockade_colour
 
	}

18 def 
	$draw_block
 ( 
self
 ) :

20 
pygame
 . 
draw
 . 
	`rect
 ( 
self
 . 
screen
 , 
self
 . 
colour
 , 
self
 . 
rect
 ) 
	}


	@./game_stats.py

1 class 
	cGameStats
 ( ) :

3 def 
	$__init__
 ( 
self
 , 
settings
 ) :

5 
self
 . 
	=settings
 = 
settings

6 
self
 . 
	`reset_stats
 ( )

7 
self
 . 
	=score
 = 0

8 
self
 . 
	=high_score
 = 0

11 
self
 . 
	=game_active
 = False

14 
self
 . 
	`read_high_score
 ( ) 
	}

16 def 
	$reset_stats
 ( 
self
 ) :

18 
self
 . 
	=ships_left
 = 
self
 . 
settings
 . 
ship_limit

19 
self
 . 
	=score
 = 0

20 
self
 . 
	=level
 = 1 
	}

22 def 
	$write_high_score
 ( 
self
 ) :

24 with 
	`open
 ( '.highscore' , 'w' ) as 
file_object
 :

25 
file_object
 . 
	`write
 ( 
	`str
 ( 
self
 . 
high_score
 ) ) 
	}

27 def 
	$read_high_score
 ( 
self
 ) :

30 with 
	`open
 ( '.highscore' , 'r' ) as 
file_object
 :

31 
self
 . 
	=high_score
 = 
	`int
 ( 
file_object
 . 
	`read
 ( ) )

33 pass 
	}


	@./ship.py

1 import 
	~pygame

2 from 
	~pygame.sprite
 import 
Sprite

4 class 
	cShip
 ( 
Sprite
 ) :

6 def 
	$__init__
 ( 
self
 , 
settings
 , 
screen
 ) :

8 
	`super
 ( 
Ship
 , 
self
 ) . 
	`__init__
 ( )

9 
self
 . 
	=settings
 = 
settings

10 
self
 . 
	=screen
 = 
screen

11 
self
 . 
	=screen_rect
 = 
screen
 . 
	`get_rect
 ( )

14 
self
 . 
	=image
 = 
pygame
 . 
image
 . 
	`load
 ( 'images/ship.bmp' )

15 
self
 . 
	=rect
 = 
self
 . 
image
 . 
	`get_rect
 ( )

18 
self
 . 
rect
 . 
	=centerx
 = 
self
 . 
screen_rect
 . 
centerx

19 
self
 . 
rect
 . 
	=bottom
 = 
self
 . 
screen_rect
 . 
bottom

22 
self
 . 
	=center
 = 
	`float
 ( 
self
 . 
rect
 . 
centerx
 )

25 
self
 . 
	=moving_left
 = False

26 
self
 . 
	=moving_right
 = False 
	}

28 def 
	$update
 ( 
self
 ) :

30 if 
self
 . 
moving_left
 and 
self
 . 
rect
 . 
left
 > 
self
 . 
screen_rect
 . 
left
 :

31 
self
 . 
	=center
 -= 
self
 . 
settings
 . 
ship_speed_factor

32 if 
self
 . 
moving_right
 and 
self
 . 
rect
 . 
right
 < 
self
 . 
screen_rect
 . 
right
 :

33 
self
 . 
	=center
 += 
self
 . 
settings
 . 
ship_speed_factor

36 
self
 . 
rect
 . 
	=centerx
 = 
self
 . 
center
 
	}

38 def 
	$blitme
 ( 
self
 ) :

40 
self
 . 
screen
 . 
	`blit
 ( 
self
 . 
image
 , 
self
 . 
rect
 ) 
	}

42 def 
	$center_ship
 ( 
self
 ) :

44 
self
 . 
	=center
 = 
self
 . 
screen_rect
 . 
centerx
 
	}


	@./bullet.py

1 import 
	~pygame

2 from 
	~pygame.sprite
 import 
Sprite

5 class 
	cBullet
 ( 
Sprite
 ) :

8 def 
	$__init__
 ( 
self
 , 
settings
 , 
screen
 , 
vehicule
 ) :

10 
	`super
 ( 
Bullet
 , 
self
 ) . 
	`__init__
 ( )

11 
self
 . 
	=screen
 = 
screen

13 if 
settings
 . 
widebullets
 == True :

14 
	=bullet_width
 = 100 * 
settings
 . 
bullet_width

16 
	=bullet_width
 = 
settings
 . 
bullet_width

19 
self
 . 
	=rect
 = 
pygame
 . 
	`Rect
 ( 0 , 0 , 
bullet_width
 , 
settings
 . 
bullet_height
 )

21 
self
 . 
	=colour
 = 
settings
 . 
bullet_colour

22 
self
 . 
	=speed_factor
 = 
settings
 . 
bullet_speed_factor
 
	}

24 def 
	$update
 ( 
self
 ) :

27 
self
 . 
	=y
 += 
self
 . 
speed_factor
 * 
self
 . 
direction

29 
self
 . 
rect
 . 
	=y
 = 
self
 . 
y
 
	}

31 def 
	$draw_bullet
 ( 
self
 ) :

33 
pygame
 . 
draw
 . 
	`rect
 ( 
self
 . 
screen
 , 
self
 . 
colour
 , 
self
 . 
rect
 ) 
	}

36 class 
	cFriendlyBullet
 ( 
Bullet
 ) :

38 def 
	$__init__
 ( 
self
 , 
settings
 , 
screen
 , 
ship
 ) :

39 
	`super
 ( 
FriendlyBullet
 , 
self
 ) . 
	`__init__
 ( 
settings
 , 
screen
 , 
ship
 )

41 
self
 . 
rect
 . 
	=centerx
 = 
ship
 . 
rect
 . 
centerx

42 
self
 . 
rect
 . 
	=top
 = 
ship
 . 
rect
 . 
top

45 
self
 . 
	=y
 = 
	`float
 ( 
self
 . 
rect
 . 
y
 )

47 
self
 . 
	=direction
 = - 1 
	}

50 class 
	cAlienBullet
 ( 
Bullet
 ) :

52 def 
	$__init__
 ( 
self
 , 
settings
 , 
screen
 , 
alien
 ) :

53 
	`super
 ( 
AlienBullet
 , 
self
 ) . 
	`__init__
 ( 
settings
 , 
screen
 , 
alien
 )

55 
self
 . 
rect
 . 
	=centerx
 = 
alien
 . 
rect
 . 
centerx

56 
self
 . 
rect
 . 
	=top
 = 
alien
 . 
rect
 . 
bottom

59 
self
 . 
	=y
 = 
	`float
 ( 
self
 . 
rect
 . 
y
 )

61 
self
 . 
	=direction
 = 1

62 
self
 . 
	=colour
 = 
settings
 . 
alien_bullet_colour
 
	}


	@./defence.py

1 class 
	cDefence
 ( ) :

3 def 
	$__init__
 ( 
self
 , 
settings
 , 
screen
 ) :

4 
self
 . 
	=settings
 = 
settings

5 
self
 . 
	=screen
 = 
screen

8 
self
 . 
	=rect
 = 
pygame
 . 
	`Rect
 ( 0 , 0 , 15 , 9 )

10 
self
 . 
	=colour
 = ( 80 , 50 , 50 ) 
	}


	@./alien_invasion.py

1 import 
	~pygame

2 from 
	~pygame.sprite
 import 
Group

4 from 
	~settings
 import 
Settings

5 from 
	~game_stats
 import 
GameStats

6 from 
	~scoreboard
 import 
Scoreboard

7 from 
	~button
 import 
Button

8 from 
	~ship
 import 
Ship

9 from 
	~alien
 import 
Alien

11 import 
	~game_functions
 as 
gf

13 def 
	$run_game
 ( ) :

15 
pygame
 . 
	`init
 ( )

16 
	=settings
 = 
	`Settings
 ( )

17 
	=screen
 = 
pygame
 . 
display
 . 
	`set_mode
 (

18 ( 
settings
 . 
screen_width
 , 
settings
 . 
screen_height
 ) )

19 
pygame
 . 
display
 . 
	`set_caption
 ( 'Alien Invasion' )

22 
	=play_button
 = 
	`Button
 ( 
settings
 , 
screen
 , 'Play' )

23 
	=stats
 = 
	`GameStats
 ( 
settings
 )

24 
	=sb
 = 
	`Scoreboard
 ( 
settings
 , 
screen
 , 
stats
 )

27 
	=ship
 = 
	`Ship
 ( 
settings
 , 
screen
 )

28 
	=bullets
 = 
	`Group
 ( )

29 
	=blockade
 = 
	`Group
 ( )

30 
	=alien_groups
 = [ ]

33 
gf
 . 
	`initialise_fleet
 ( 
settings
 , 
screen
 , 
ship
 , 
alien_groups
 )

34 
gf
 . 
	`create_fleet
 ( 
settings
 , 
screen
 , 
ship
 , 
alien_groups
 )

38 
gf
 . 
	`check_events
 ( 
settings
 , 
stats
 , 
screen
 , 
sb
 , 
ship
 , 
alien_groups
 ,

39 
bullets
 , 
blockade
 , 
play_button
 )

41 if 
stats
 . 
game_active
 :

42 
ship
 . 
	`update
 ( )

43 
gf
 . 
	`update_bullets
 ( 
settings
 , 
stats
 , 
screen
 , 
sb
 , 
ship
 , 
alien_groups
 , 
bullets
 , 
blockade
 )

44 
gf
 . 
	`update_aliens
 ( 
settings
 , 
stats
 , 
screen
 , 
sb
 , 
ship
 , 
alien_groups
 , 
bullets
 , 
blockade
 )

46 
gf
 . 
	`update_screen
 ( 
settings
 , 
stats
 , 
screen
 , 
sb
 , 
ship
 , 
alien_groups
 ,

47 
bullets
 , 
blockade
 , 
play_button
 ) 
	}

48 
	`run_game
 ( )


	@./game_functions.py

1 import 
	~sys

2 import 
	~pygame

3 from 
	~pygame.sprite
 import 
Group

4 from 
	~random
 import 
randint

5 from 
	~time
 import 
sleep

7 from 
	~bullet
 import 
FriendlyBullet
 , 
AlienBullet

8 from 
	~alien
 import 
Alien

9 from 
	~block
 import 
Block

15 def 
	$check_events
 ( 
settings
 , 
stats
 , 
screen
 , 
sb
 , 
ship
 , 
alien_groups
 , 
bullets
 ,

16 
blockade
 , 
play_button
 ) :

19 for 
event
 in 
pygame
 . 
event
 . 
	`get
 ( ) :

20 if 
event
 . 
type
 == 
pygame
 . 
QUIT
 :

21 
sys
 . 
	`exit
 ( )

22 elif 
event
 . 
type
 == 
pygame
 . 
KEYDOWN
 :

23 
	`check_keydown_events
 ( 
event
 , 
settings
 , 
stats
 , 
screen
 , 
sb
 , 
ship
 ,

24 
alien_groups
 , 
bullets
 , 
blockade
 )

25 elif 
event
 . 
type
 == 
pygame
 . 
KEYUP
 :

26 
	`check_keyup_events
 ( 
event
 , 
settings
 , 
ship
 )

27 elif 
event
 . 
type
 == 
pygame
 . 
MOUSEBUTTONDOWN
 :

28 
	=mouse_x
 , 
	=mouse_y
 = 
pygame
 . 
mouse
 . 
	`get_pos
 ( )

29 
	`check_play_button
 ( 
settings
 , 
stats
 , 
screen
 , 
sb
 , 
play_button
 , 
ship
 ,

30 
alien_groups
 , 
bullets
 , 
mouse_x
 , 
mouse_y
 ) 
	}

32 def 
	$check_keydown_events
 ( 
event
 , 
settings
 , 
stats
 , 
screen
 , 
sb
 , 
ship
 ,

33 
alien_groups
 , 
bullets
 , 
blockade
 ) :

35 if 
event
 . 
key
 == 
pygame
 . 
K_LEFT
 :

36 
ship
 . 
	=moving_left
 = True

37 if 
event
 . 
key
 == 
pygame
 . 
K_RIGHT
 :

38 
ship
 . 
	=moving_right
 = True

39 if 
event
 . 
key
 == 
pygame
 . 
K_SPACE
 :

40 
	`fire_bullet_ship
 ( 
settings
 , 
screen
 , 
ship
 , 
bullets
 )

41 if 
event
 . 
key
 == 
pygame
 . 
K_q
 :

42 
sys
 . 
	`exit
 ( )

43 if 
event
 . 
key
 == 
pygame
 . 
K_r
 :

44 
settings
 . 
	=rapidfire
 = not 
settings
 . 
rapidfire

45 if 
event
 . 
key
 == 
pygame
 . 
K_e
 :

46 
settings
 . 
	=powerbullets
 = not 
settings
 . 
powerbullets

47 if 
event
 . 
key
 == 
pygame
 . 
K_w
 :

48 
settings
 . 
	=widebullets
 = not 
settings
 . 
widebullets

49 if 
event
 . 
key
 == 
pygame
 . 
K_p
 :

50 
	`start_game
 ( 
settings
 , 
stats
 , 
screen
 , 
sb
 , 
ship
 , 
alien_groups
 , 
bullets
 ,

51 
blockade
 ) 
	}

53 def 
	$check_keyup_events
 ( 
event
 , 
settings
 , 
ship
 ) :

55 if 
event
 . 
key
 == 
pygame
 . 
K_LEFT
 :

56 
ship
 . 
	=moving_left
 = False

57 if 
event
 . 
key
 == 
pygame
 . 
K_RIGHT
 :

58 
ship
 . 
	=moving_right
 = False 
	}

64 def 
	$update_screen
 ( 
settings
 , 
stats
 , 
screen
 , 
sb
 , 
ship
 , 
alien_groups
 , 
bullets
 ,

65 
blockade
 , 
play_button
 ) :

68 
screen
 . 
	`fill
 ( 
settings
 . 
bg_colour
 )

70 for 
bullet
 in 
bullets
 . 
	`sprites
 ( ) :

71 
bullet
 . 
	`draw_bullet
 ( )

73 
ship
 . 
	`blitme
 ( )

75 for 
alien_column
 in 
alien_groups
 :

76 
alien_column
 . 
	`draw
 ( 
screen
 )

78 for 
block
 in 
blockade
 :

79 
block
 . 
	`draw_block
 ( )

81 
sb
 . 
	`show_score
 ( )

83 if not 
stats
 . 
game_active
 :

84 
play_button
 . 
	`draw_button
 ( )

86 
pygame
 . 
display
 . 
	`flip
 ( ) 
	}

88 def 
	$check_play_button
 ( 
settings
 , 
stats
 , 
screen
 , 
sb
 , 
play_button
 , 
ship
 ,

89 
alien_groups
 , 
bullets
 , 
blockade
 , 
mouse_x
 , 
mouse_y
 ) :

91 
	=button_clicked
 = 
play_button
 . 
rect
 . 
	`collidepoint
 ( 
mouse_x
 , 
mouse_y
 )

92 if 
button_clicked
 and not 
stats
 . 
game_active
 :

93 
	`start_game
 ( 
settings
 , 
stats
 , 
screen
 , 
sb
 , 
ship
 , 
alien_groups
 , 
bullets
 ,

94 
blockade
 ) 
	}

96 def 
	$start_game
 ( 
settings
 , 
stats
 , 
screen
 , 
sb
 , 
ship
 , 
alien_groups
 , 
bullets
 ,

97 
blockade
 ) :

100 
settings
 . 
	`initialise_dynamic_settings
 ( )

101 
stats
 . 
	`reset_stats
 ( )

102 
	`prep_images
 ( 
sb
 )

105 for 
alien_column
 in 
alien_groups
 :

106 
alien_column
 . 
	`empty
 ( )

107 
bullets
 . 
	`empty
 ( )

108 
	`create_fleet
 ( 
settings
 , 
screen
 , 
ship
 , 
alien_groups
 )

109 
	`create_defence
 ( 
settings
 , 
screen
 , 
blockade
 )

110 
ship
 . 
	`center_ship
 ( )

113 
stats
 . 
	=game_active
 = True

114 
pygame
 . 
mouse
 . 
	`set_visible
 ( False ) 
	}

116 def 
	$prep_images
 ( 
sb
 ) :

119 
sb
 . 
	`prep_score
 ( )

120 
sb
 . 
	`prep_high_score
 ( )

121 
sb
 . 
	`prep_level
 ( )

122 
sb
 . 
	`prep_ships
 ( ) 
	}

124 def 
	$check_high_score
 ( 
stats
 , 
sb
 ) :

126 if 
stats
 . 
score
 > 
stats
 . 
high_score
 :

127 
stats
 . 
	=high_score
 = 
stats
 . 
score

128 
sb
 . 
	`prep_high_score
 ( )

129 
stats
 . 
	`write_high_score
 ( ) 
	}

135 def 
	$check_bullet_alien_collision
 ( 
settings
 , 
stats
 , 
screen
 , 
sb
 , 
ship
 ,

136 
alien_groups
 , 
bullets
 , 
blockade
 ) :

140 
	=ships_fire
 = 
	`Group
 ( )

141 for 
bullet
 in 
bullets
 :

142 if 
bullet
 . 
direction
 == - 1 :

143 
ships_fire
 . 
	`add
 ( 
bullet
 )

147 for 
alien_column
 in 
alien_groups
 :

148 if 
settings
 . 
powerbullets
 == True :

149 
	=collisions
 = 
pygame
 . 
sprite
 . 
	`groupcollide
 ( 
ships_fire
 , 
alien_column
 , False , True )

151 
	=collisions
 = 
pygame
 . 
sprite
 . 
	`groupcollide
 ( 
ships_fire
 , 
alien_column
 , True , True )

153 if 
collisions
 :

154 for 
alien
 in 
collisions
 . 
	`values
 ( ) :

155 
stats
 . 
	=score
 += 
settings
 . 
alien_points
 * 
	`len
 ( 
alien_column
 )

156 
sb
 . 
	`prep_score
 ( )

157 
	`check_high_score
 ( 
stats
 , 
sb
 )

160 
	`define_frontline
 ( 
alien_column
 )

163 
	=count
 = 0

164 for 
alien_column
 in 
alien_groups
 :

165 
	=count
 += 
	`len
 ( 
alien_column
 )

166 if 
count
 == 0 :

167 
	`make_new_level
 ( 
settings
 , 
stats
 , 
screen
 , 
sb
 , 
ship
 , 
alien_groups
 , 
bullets
 , 
blockade
 ) 
	}

169 def 
	$make_new_level
 ( 
settings
 , 
stats
 , 
screen
 , 
sb
 , 
ship
 , 
alien_groups
 , 
bullets
 , 
blockade
 ) :

172 
bullets
 . 
	`empty
 ( )

173 
settings
 . 
	`increase_speed
 ( )

174 
stats
 . 
	=level
 += 1

175 
sb
 . 
	`prep_level
 ( )

176 
	`create_fleet
 ( 
settings
 , 
screen
 , 
ship
 , 
alien_groups
 )

177 
	`create_defence
 ( 
settings
 , 
screen
 , 
blockade
 ) 
	}

179 def 
	$check_bullet_ship_collision
 ( 
settings
 , 
stats
 , 
screen
 , 
sb
 , 
ship
 ,

180 
alien_groups
 , 
bullets
 ) :

183 
	=alien_fire
 = 
	`Group
 ( )

184 for 
bullet
 in 
bullets
 :

185 if 
bullet
 . 
direction
 == 1 :

186 
alien_fire
 . 
	`add
 ( 
bullet
 )

188 if 
pygame
 . 
sprite
 . 
	`spritecollideany
 ( 
ship
 , 
alien_fire
 ) :

189 
	`ship_hit_bullet
 ( 
settings
 , 
stats
 , 
screen
 , 
sb
 , 
ship
 , 
alien_groups
 , 
bullets
 ) 
	}

191 def 
	$check_alien_ship_collision
 ( 
settings
 , 
stats
 , 
screen
 , 
sb
 , 
ship
 ,

192 
alien_groups
 , 
bullets
 , 
blockade
 ) :

194 for 
alien_column
 in 
alien_groups
 :

195 if 
pygame
 . 
sprite
 . 
	`spritecollideany
 ( 
ship
 , 
alien_column
 ) :

196 
	`ship_hit_alien
 ( 
settings
 , 
stats
 , 
screen
 , 
sb
 , 
ship
 , 
alien_groups
 , 
bullets
 , 
blockade
 ) 
	}

198 def 
	$check_bullet_blockade_collision
 ( 
bullets
 , 
blockade
 ) :

200 
pygame
 . 
sprite
 . 
	`groupcollide
 ( 
bullets
 , 
blockade
 , True , True ) 
	}

202 def 
	$check_alien_blockade_collision
 ( ) :

204 pass 
	}

210 def 
	$ship_hit_alien
 ( 
settings
 , 
stats
 , 
screen
 , 
sb
 , 
ship
 , 
alien_groups
 , 
bullets
 , 
blockade
 ) :

213 
stats
 . 
	=ships_left
 -= 1

214 if 
stats
 . 
ships_left
 :

215 
	`ship_lost_new_fleet
 ( 
settings
 , 
screen
 , 
sb
 , 
ship
 , 
alien_groups
 , 
bullets
 , 
blockade
 )

217 
	`game_over
 ( 
stats
 ) 
	}

219 def 
	$ship_hit_bullet
 ( 
settings
 , 
stats
 , 
screen
 , 
sb
 , 
ship
 , 
alien_groups
 , 
bullets
 ) :

222 
stats
 . 
	=ships_left
 -= 1

223 if 
stats
 . 
ships_left
 :

224 
	`ship_lost
 ( 
settings
 , 
screen
 , 
sb
 , 
ship
 , 
alien_groups
 , 
bullets
 )

226 
	`game_over
 ( 
stats
 ) 
	}

228 def 
	$ship_lost_new_fleet
 ( 
settings
 , 
screen
 , 
sb
 , 
ship
 , 
alien_groups
 , 
bullets
 , 
blockade
 ) :

230 
sb
 . 
	`prep_ships
 ( )

231 for 
alien_column
 in 
alien_groups
 :

232 
alien_column
 . 
	`empty
 ( )

233 
bullets
 . 
	`empty
 ( )

234 
blockade
 . 
	`empty
 ( )

235 
	`create_fleet
 ( 
settings
 , 
screen
 , 
ship
 , 
alien_groups
 )

236 
	`create_defence
 ( 
settings
 , 
screen
 , 
blockade
 )

237 
ship
 . 
	`center_ship
 ( )

238 
	`sleep
 ( 0.5 ) 
	}

240 def 
	$ship_lost
 ( 
settings
 , 
screen
 , 
sb
 , 
ship
 , 
alien_groups
 , 
bullets
 ) :

242 
sb
 . 
	`prep_ships
 ( )

243 
bullets
 . 
	`empty
 ( )

244 
	`sleep
 ( 0.5 ) 
	}

246 def 
	$game_over
 ( 
stats
 ) :

248 
stats
 . 
	=game_active
 = False

249 
pygame
 . 
mouse
 . 
	`set_visible
 ( True ) 
	}

255 def 
	$fire_bullet_ship
 ( 
settings
 , 
screen
 , 
ship
 , 
bullets
 ) :

259 if 
settings
 . 
rapidfire
 == True :

260 
	=new_bullet
 = 
	`FriendlyBullet
 ( 
settings
 , 
screen
 , 
ship
 )

261 
bullets
 . 
	`add
 ( 
new_bullet
 )

264 
	=bullet_count
 = 0

265 for 
bullet
 in 
bullets
 . 
	`sprites
 ( ) :

266 if 
bullet
 . 
direction
 == - 1 :

267 
	=bullet_count
 += 1

269 if 
bullet_count
 < 
settings
 . 
bullets_allowd
 :

271 
	=new_bullet
 = 
	`FriendlyBullet
 ( 
settings
 , 
screen
 , 
ship
 )

272 
bullets
 . 
	`add
 ( 
new_bullet
 ) 
	}

275 def 
	$fire_bullet_alien
 ( 
settings
 , 
screen
 , 
alien
 , 
bullets
 ) :

277 
	=new_bullet
 = 
	`AlienBullet
 ( 
settings
 , 
screen
 , 
alien
 )

278 
bullets
 . 
	`add
 ( 
new_bullet
 ) 
	}

280 def 
	$update_bullets
 ( 
settings
 , 
stats
 , 
screen
 , 
sb
 , 
ship
 , 
alien_groups
 , 
bullets
 , 
blockade
 ) :

283 
bullets
 . 
	`update
 ( )

286 for 
bullet
 in 
bullets
 . 
	`copy
 ( ) :

287 if 
bullet
 . 
rect
 . 
bottom
 <= 0 or 
bullet
 . 
rect
 . 
top
 >= 
settings
 . 
screen_height
 :

288 
bullets
 . 
	`remove
 ( 
bullet
 )

290 
	`check_bullet_alien_collision
 ( 
settings
 , 
stats
 , 
screen
 , 
sb
 , 
ship
 ,

291 
alien_groups
 , 
bullets
 , 
blockade
 )

292 
	`check_bullet_ship_collision
 ( 
settings
 , 
stats
 , 
screen
 , 
sb
 , 
ship
 ,

293 
alien_groups
 , 
bullets
 )

294 
	`check_bullet_blockade_collision
 ( 
bullets
 , 
blockade
 ) 
	}

300 def 
	$initialise_fleet
 ( 
settings
 , 
screen
 , 
ship
 , 
alien_groups
 ) :

304 
	=alien
 = 
	`Alien
 ( 
settings
 , 
screen
 )

305 
	=number_columns
 = 
	`get_number_columns
 ( 
settings
 , 
alien
 . 
rect
 . 
width
 )

306 
	=number_rows
 = 
	`get_number_rows
 ( 
settings
 , 
ship
 . 
rect
 . 
height
 , 
alien
 . 
rect
 . 
height
 )

307 
settings
 . 
	=columns
 = 
number_columns

308 
settings
 . 
	=rows
 = 
number_rows

310 for 
column_number
 in 
	`range
 ( 
number_columns
 ) :

311 
	=new_group
 = 
	`Group
 ( )

312 
alien_groups
 . 
	`append
 ( 
new_group
 ) 
	}

314 def 
	$create_fleet
 ( 
settings
 , 
screen
 , 
ship
 , 
alien_groups
 ) :

318 
	=number_columns
 = 
settings
 . 
columns

319 
	=number_rows
 = 
settings
 . 
rows

322 for 
column_number
 , 
alien_column
 in 
	`enumerate
 ( 
alien_groups
 ) :

323 for 
row_number
 in 
	`range
 ( 
number_rows
 ) :

324 
	`create_alien
 ( 
settings
 , 
screen
 , 
alien_column
 , 
column_number
 , 
row_number
 ) 
	}

326 def 
	$get_number_columns
 ( 
settings
 , 
alien_width
 ) :

328 
	=available_space_x
 = 
settings
 . 
screen_width
 - 2 * 
alien_width

329 
	=number_aliens_x
 = 
	`int
 ( 
available_space_x
 / ( 2 * 
alien_width
 ) )

330 return 
number_aliens_x
 
	}

332 def 
	$get_number_rows
 ( 
settings
 , 
ship_height
 , 
alien_height
 ) :

334 
	=available_space_y
 = (

335 
settings
 . 
screen_height
 - ( 3 * 
alien_height
 ) - 
ship_height
 )

336 
	=number_rows
 = 
	`int
 ( 
available_space_y
 / ( 2 * 
alien_height
 ) ) / 2

337 return 
	`int
 ( 
number_rows
 / 1 ) 
	}

339 def 
	$create_alien
 ( 
settings
 , 
screen
 , 
alien_column
 , 
alien_number
 , 
row_number
 ) :

341 
	=alien
 = 
	`Alien
 ( 
settings
 , 
screen
 )

342 
	=alien_width
 = 
alien
 . 
rect
 . 
width

343 
alien
 . 
	=x
 = ( 
alien_width
 + 2 * 
alien_width
 * 
alien_number
 +

344 
settings
 . 
shim_x
 )

345 
alien
 . 
rect
 . 
	=x
 = 
alien
 . 
x

346 
alien
 . 
rect
 . 
	=y
 = ( 
alien
 . 
rect
 . 
height
 + 2 * 
alien
 . 
rect
 . 
height
 * 
row_number
 +

347 
settings
 . 
shim_top
 )

349 
alien
 . 
	=row
 = 
row_number

350 
alien_column
 . 
	`add
 ( 
alien
 ) 
	}

352 def 
	$check_fleet_edges
 ( 
settings
 , 
alien_groups
 ) :

354 for 
alien_column
 in 
alien_groups
 :

355 for 
alien
 in 
alien_column
 . 
	`sprites
 ( ) :

356 if 
alien
 . 
	`check_edges
 ( ) :

357 
	`change_fleet_direction
 ( 
settings
 , 
alien_groups
 )

358 break 
	}

360 def 
	$change_fleet_direction
 ( 
settings
 , 
alien_groups
 ) :

362 for 
alien_column
 in 
alien_groups
 :

363 for 
alien
 in 
alien_column
 . 
	`sprites
 ( ) :

364 
alien
 . 
rect
 . 
	=y
 += 
settings
 . 
fleet_drop_speed

365 
settings
 . 
	=fleet_direction
 *= - 1 
	}

367 def 
	$check_aliens_bottom
 ( 
settings
 , 
stats
 , 
screen
 , 
sb
 , 
ship
 , 
alien_groups
 , 
bullets
 ) :

369 
	=screen_rect
 = 
screen
 . 
	`get_rect
 ( )

370 for 
alien_column
 in 
alien_groups
 :

371 for 
alien
 in 
alien_column
 . 
	`sprites
 ( ) :

372 if 
alien
 . 
rect
 . 
bottom
 >= 
screen_rect
 . 
bottom
 :

374 
	`ship_hit
 ( 
settings
 , 
stats
 , 
screen
 , 
sb
 , 
ship
 , 
alien_groups
 , 
bullets
 ) 
	}

376 def 
	$update_aliens
 ( 
settings
 , 
stats
 , 
screen
 , 
sb
 , 
ship
 , 
alien_groups
 , 
bullets
 , 
blockade
 ) :

382 for 
alien_column
 in 
alien_groups
 :

383 
alien_column
 . 
	`update
 ( )

385 
	`check_fleet_edges
 ( 
settings
 , 
alien_groups
 )

386 
	`check_alien_ship_collision
 ( 
settings
 , 
stats
 , 
screen
 , 
sb
 , 
ship
 ,

387 
alien_groups
 , 
bullets
 , 
blockade
 )

388 
	`check_aliens_bottom
 ( 
settings
 , 
stats
 , 
screen
 , 
sb
 , 
ship
 , 
alien_groups
 , 
bullets
 )

389 
	`check_alien_blockade_collision
 ( )

390 
	`generate_alien_fire
 ( 
settings
 , 
screen
 , 
alien_groups
 , 
bullets
 ) 
	}

392 def 
	$define_frontline
 ( 
alien_column
 ) :

394 if 
	`len
 ( 
alien_column
 ) :

395 
	=front_line
 = 
	`max
 ( 
alien
 . 
row
 for 
alien
 in 
alien_column
 . 
	`sprites
 ( ) )

396 for 
alien
 in 
alien_column
 . 
	`sprites
 ( ) :

397 if 
alien
 . 
row
 == 
front_line
 :

398 
alien
 . 
	=front_line
 = True 
	}

400 def 
	$generate_alien_fire
 ( 
settings
 , 
screen
 , 
alien_groups
 , 
bullets
 ) :

402 for 
alien_column
 in 
alien_groups
 :

403 for 
alien
 in 
alien_column
 :

404 if 
alien
 . 
front_line
 :

405 if 
	`randint
 ( 0 , 
settings
 . 
alien_fire_rate
 * 100 ) == 0 :

406 
	`fire_bullet_alien
 ( 
settings
 , 
screen
 , 
alien
 , 
bullets
 ) 
	}

413 def 
	$create_defence
 ( 
settings
 , 
screen
 , 
blockade
 ) :

416 
	=rows
 = [

428 
	=blockade_w
 = 20 * 3

429 
	=blocks
 = ( 
settings
 . 
screen_width
 - 2 * 
blockade_w
 ) / ( 
blockade_w
 * 3 )

430 
	=spacer
 = ( 
settings
 . 
screen_width
 - ( 
blocks
 * ( 
blockade_w
 * 3 ) - 2 * 
blockade_w
 ) ) / 2

432 for 
block
 in 
	`range
 ( 0 , 
blocks
 ) :

433 
	`create_shield
 ( 
settings
 , 
screen
 , 
blockade
 , 
rows
 , 
spacer
 +

434 3 * 
block
 * 
blockade_w
 , 
settings
 . 
screen_height
 - 175 ) 
	}

436 def 
	$create_shield
 ( 
settings
 , 
screen
 , 
blockade
 , 
rows
 , 
x
 , 
y
 ) :

438 
	=width
 = 
settings
 . 
block_width

439 
	=height
 = 
settings
 . 
block_height

442 for 
i
 , 
row
 in 
	`enumerate
 ( 
rows
 ) :

443 for 
j
 , 
block
 in 
	`enumerate
 ( 
row
 ) :

444 if 
block
 :

445 
	=block
 = 
	`Block
 ( 
settings
 , 
screen
 , 
x
 + 
j
 * 
width
 , 
y
 + 
i
 * 
height
 )

446 
blockade
 . 
	`add
 ( 
block
 ) 
	}


	@./scoreboard.py

1 import 
	~pygame.font

2 from 
	~pygame.sprite
 import 
Group

4 from 
	~ship
 import 
Ship

7 class 
	cScoreboard
 ( ) :

10 def 
	$__init__
 ( 
self
 , 
settings
 , 
screen
 , 
stats
 ) :

12 
self
 . 
	=screen
 = 
screen

13 
self
 . 
	=screen_rect
 = 
screen
 . 
	`get_rect
 ( )

14 
self
 . 
	=settings
 = 
settings

15 
self
 . 
	=stats
 = 
stats

18 
self
 . 
	=text_colour
 = ( 30 , 30 , 30 )

19 
self
 . 
	=font
 = 
pygame
 . 
font
 . 
	`SysFont
 ( None , 48 )

22 
self
 . 
	`prep_score
 ( )

23 
self
 . 
	`prep_high_score
 ( )

24 
self
 . 
	`prep_level
 ( )

25 
self
 . 
	`prep_ships
 ( ) 
	}

27 def 
	$prep_score
 ( 
self
 ) :

29 
	=rounded_score
 = 
	`int
 ( 
	`round
 ( 
self
 . 
stats
 . 
score
 , - 1 ) )

30 
	=score_str
 = "{:,}" . 
	`format
 ( 
rounded_score
 )

31 
self
 . 
	=score_image
 = 
self
 . 
font
 . 
	`render
 ( 
score_str
 , True , 
self
 . 
text_colour
 ,

32 
self
 . 
settings
 . 
bg_colour
 )

35 
self
 . 
	=score_rect
 = 
self
 . 
score_image
 . 
	`get_rect
 ( )

36 
self
 . 
score_rect
 . 
	=right
 = 
self
 . 
screen_rect
 . 
right
 - 20

37 
self
 . 
score_rect
 . 
	=top
 = 20 
	}

39 def 
	$prep_high_score
 ( 
self
 ) :

41 
	=high_score
 = 
	`int
 ( 
	`round
 ( 
self
 . 
stats
 . 
high_score
 , - 1 ) )

42 
	=high_score_str
 = "{:,}" . 
	`format
 ( 
high_score
 )

43 
self
 . 
	=high_score_image
 = 
self
 . 
font
 . 
	`render
 ( 
high_score_str
 , True ,

44 
self
 . 
text_colour
 , 
self
 . 
settings
 . 
bg_colour
 )

47 
self
 . 
	=high_score_rect
 = 
self
 . 
high_score_image
 . 
	`get_rect
 ( )

48 
self
 . 
high_score_rect
 . 
	=centerx
 = 
self
 . 
screen_rect
 . 
centerx

49 
self
 . 
high_score_rect
 . 
	=top
 = 
self
 . 
score_rect
 . 
top
 
	}

51 def 
	$prep_level
 ( 
self
 ) :

53 
self
 . 
	=level_image
 = 
self
 . 
font
 . 
	`render
 ( 
	`str
 ( 
self
 . 
stats
 . 
level
 ) , True ,

54 
self
 . 
text_colour
 , 
self
 . 
settings
 . 
bg_colour
 )

57 
self
 . 
	=level_rect
 = 
self
 . 
level_image
 . 
	`get_rect
 ( )

58 
self
 . 
level_rect
 . 
	=right
 = 
self
 . 
score_rect
 . 
right

59 
self
 . 
level_rect
 . 
	=top
 = 
self
 . 
score_rect
 . 
bottom
 + 10 
	}

61 def 
	$prep_ships
 ( 
self
 ) :

63 
self
 . 
	=ships
 = 
	`Group
 ( )

64 for 
ship_number
 in 
	`range
 ( 
self
 . 
stats
 . 
ships_left
 ) :

65 
	=ship
 = 
	`Ship
 ( 
self
 . 
settings
 , 
self
 . 
screen
 )

66 
ship
 . 
rect
 . 
	=x
 = 10 + 
ship_number
 * 
ship
 . 
rect
 . 
width

67 
ship
 . 
rect
 . 
	=y
 = 10

68 
self
 . 
ships
 . 
	`add
 ( 
ship
 ) 
	}

70 def 
	$show_score
 ( 
self
 ) :

72 
self
 . 
screen
 . 
	`blit
 ( 
self
 . 
score_image
 , 
self
 . 
score_rect
 )

73 
self
 . 
screen
 . 
	`blit
 ( 
self
 . 
high_score_image
 , 
self
 . 
high_score_rect
 )

74 
self
 . 
screen
 . 
	`blit
 ( 
self
 . 
level_image
 , 
self
 . 
level_rect
 )

75 
self
 . 
ships
 . 
	`draw
 ( 
self
 . 
screen
 ) 
	}


	@./button.py

1 import 
	~pygame

3 class 
	cButton
 ( ) :

5 def 
	$__init__
 ( 
self
 , 
settings
 , 
screen
 , 
msg
 ) :

6 
self
 . 
	=screen
 = 
screen

7 
self
 . 
	=screen_rect
 = 
screen
 . 
	`get_rect
 ( )

10 
self
 . 
	=width
 , 
self
 . 
	=height
 = 200 , 50

11 
self
 . 
	=button_colour
 = 0 , 255 , 0

12 
self
 . 
	=text_colour
 = 255 , 255 , 255

13 
self
 . 
	=font
 = 
pygame
 . 
font
 . 
	`SysFont
 ( None , 48 )

16 
self
 . 
	=rect
 = 
pygame
 . 
	`Rect
 ( 0 , 0 , 
self
 . 
width
 , 
self
 . 
height
 )

17 
self
 . 
rect
 . 
	=center
 = 
self
 . 
screen_rect
 . 
center

20 
self
 . 
	`prep_msg
 ( 
msg
 ) 
	}

22 def 
	$prep_msg
 ( 
self
 , 
msg
 ) :

24 
self
 . 
	=msg_image
 = 
self
 . 
font
 . 
	`render
 ( 
msg
 , True , 
self
 . 
text_colour
 ,

25 
self
 . 
button_colour
 )

26 
self
 . 
	=msg_image_rect
 = 
self
 . 
msg_image
 . 
	`get_rect
 ( )

27 
self
 . 
msg_image_rect
 . 
	=center
 = 
self
 . 
rect
 . 
center
 
	}

29 def 
	$draw_button
 ( 
self
 ) :

31 
self
 . 
screen
 . 
	`fill
 ( 
self
 . 
button_colour
 , 
self
 . 
rect
 )

32 
self
 . 
screen
 . 
	`blit
 ( 
self
 . 
msg_image
 , 
self
 . 
msg_image_rect
 ) 
	}


	@./settings.py

1 import 
	~pygame

3 class 
	cSettings
 ( ) :

6 def 
	$__init__
 ( 
self
 ) :

10 
self
 . 
	=screen_width
 = 1200

11 
self
 . 
	=screen_height
 = 800

12 
self
 . 
	=bg_colour
 = ( 230 , 230 , 230 )

13 
self
 . 
	=columns
 = 0

14 
self
 . 
	=rows
 = 0

17 
self
 . 
	=ship_speed_factor
 = 3

18 
self
 . 
	=ship_limit
 = 3

21 
self
 . 
	=bullet_speed_factor
 = 2

22 
self
 . 
	=bullet_width
 = 3

23 
self
 . 
	=bullet_height
 = 15

24 
self
 . 
	=bullet_colour
 = 60 , 200 , 120

25 
self
 . 
	=bullets_allowd
 = 3

26 
self
 . 
	=rapidfire
 = False

27 
self
 . 
	=powerbullets
 = False

28 
self
 . 
	=widebullets
 = False

31 
self
 . 
	=shim_top
 = 100

32 
self
 . 
	=shim_x
 = 20

33 
self
 . 
	=alien_bullet_colour
 = 200 , 60 , 120

34 
self
 . 
	=alien_speed_factor
 = 0.5

35 
self
 . 
	=fleet_drop_speed
 = 10

36 
self
 . 
	=alien_fire_rate
 = 4

39 
self
 . 
	=blockade_colour
 = 60 , 200 , 120

40 
self
 . 
	=block_width
 = 3

41 
self
 . 
	=block_height
 = 6

44 
self
 . 
	=fleet_direction
 = 1

47 
self
 . 
	=speedup_scale
 = 1.1

50 
self
 . 
	=score_scale
 = 1.5

52 
self
 . 
	`initialise_dynamic_settings
 ( ) 
	}

54 def 
	$initialise_dynamic_settings
 ( 
self
 ) :

56 
self
 . 
	=ship_speed_factor
 = 3

57 
self
 . 
	=bullet_speed_factor
 = 4

58 
self
 . 
	=alien_speed_factor
 = 0.5

59 
self
 . 
	=alien_points
 = 50 
	}

61 def 
	$increase_speed
 ( 
self
 ) :

63 
self
 . 
	=ship_speed_factor
 *= 
self
 . 
speedup_scale

64 
self
 . 
	=bullet_speed_factor
 *= 
self
 . 
speedup_scale

65 
self
 . 
	=alien_speed_factor
 *= 
self
 . 
speedup_scale

66 
self
 . 
	=alien_fire_rate
 = 
	`int
 ( 
self
 . 
alien_fire_rate
 * 
self
 . 
speedup_scale
 )

67 
self
 . 
	=alien_points
 = 
	`int
 ( 
self
 . 
alien_points
 * 
self
 . 
score_scale
 ) 
	}


	@
1
.
0
11
155
./alien.py
./block.py
./game_stats.py
./ship.py
./bullet.py
./defence.py
./alien_invasion.py
./game_functions.py
./scoreboard.py
./button.py
./settings.py
